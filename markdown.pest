// character sets
char_not_sym   = _{ (ASCII_ALPHANUMERIC | ACCENTS | SPECIAL_CHARS | WHITESPACES) }
ACCENTS        = _{ "é" | "è" | "ù" | "ô" | "ê" | "î" | "à" }
SPECIAL_CHARS  = _{ "ç" | "€" }
WHITESPACES    = _{ " " | "\t" }
SYMBOLS        = _{
    ","
  | "%"
  | "~"
  | "."
  | "_"
  | "/"
  | "\\"
  | "?"
  | ":"
  | "("
  | ")"
  | "{"
  | "}"
  | ";"
  | ">"
  | "<"
  | "'"
  | "\""
  | "“"
  | "”"
  | "="
  | "-"
  | "+"
  | "#"
  | "["
  | "]"
  | "!"
  | "`"
  | "&"
  | "|"
  | "@"
  | "$"
  | INLINE_SYMBOLS
}
URL_CHARS      = _{ ASCII_ALPHANUMERIC | ":" | "/" | "." | "_" | "-" | "%" | "@" }
INLINE_SYMBOLS = _{ "`" | "[" | "*" | "![" }

// Types of text in a document
text        = { (char_not_sym | (!INLINE_SYMBOLS ~ SYMBOLS))+ }
code        = { (char_not_sym | (!("`") ~ SYMBOLS))+ }
comment_txt = { (char_not_sym | (!("-") ~ SYMBOLS))+ }
link_text   = { (char_not_sym | (!(INLINE_SYMBOLS | "]") ~ SYMBOLS))+ }
slug        = { (ASCII_ALPHANUMERIC | "_" | "-" | ".")* }

// BLOCK TYPES
// headers
h1 = { "# " ~ rich_txt }
h2 = { "## " ~ rich_txt }
h3 = { "### " ~ rich_txt }
h4 = { "#### " ~ rich_txt }
h5 = { "##### " ~ rich_txt }
h6 = { "###### " ~ rich_txt }

quote     = { "> " ~ rich_txt }
codeblock = { "```" ~ (WHITESPACES | NEWLINE)? ~ (code | NEWLINE)* ~ "```" }
comment   = { "<!--" ~ (WHITESPACES | NEWLINE)? ~ (comment_txt | NEWLINE)* ~ (WHITESPACES | NEWLINE)? ~ "-->" }

block_type = _{ h1 | h2 | h3 | h4 | h5 | h6 | quote | codeblock | comment }

// INLINE SYMBOLS
bold          =  { "**" ~ (rich_txt ~ NEWLINE)* ~ rich_txt? ~ "**" }
italic        =  { "*" ~ !("*") ~ (rich_txt ~ NEWLINE)* ~ rich_txt? ~ "*" }
inline_code   =  { ("`"){1} ~ !("`") ~ (code | NEWLINE)+ ~ "`" }
url           =  { URL_CHARS* }
image         =  { "![" ~ link_text* ~ "](" ~ url ~ ")" }
link          =  { "[" ~ (inline_symbol | link_text)* ~ "](" ~ url ~ ")" }
reflink       =  { "[" ~ (inline_symbol | link_text)* ~ "][" ~ slug ~ "]" }
refurl        =  { "[" ~ slug ~ "]:" ~ WHITESPACES* ~ url }
inline_symbol = _{ italic | bold | inline_code | link | reflink | refurl | image }

// BLOCKS
rich_txt  = { (inline_symbol | text)* }
horiz_sep = { ("-"){3, } }

// Parser groups
text_line = _{ block_type | horiz_sep | rich_txt }
file      =  {
    SOI ~ (text_line ~ NEWLINE)* ~ text_line? ~ EOI
}

// TODO    Strikethrough text
// TODO    Image add tags

